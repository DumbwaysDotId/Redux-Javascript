{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dumbways\\\\Documents\\\\reacJS\\\\redux-house-bar2\\\\src\\\\users.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport axios from 'axios';\nimport { getUsers, getUsersPending } from '../src/_actions/users';\nimport { connect } from 'react-redux';\n\nclass Users extends Component {\n  componentDidMount() {\n    this.props.dispatch(getUsersPending());\n    axios.get('https://jsonplaceholder.typicode.com/users').then(res => {\n      const users = res.data;\n      this.props.dispatch(getUsers(users));\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Data Users\"), this.props.users.isLoading === false ? null : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Loading\"), this.props.users.data.map((user, index) => React.createElement(\"p\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, user.name))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: state.users\n  };\n};\n\nexport default connect(mapStateToProps)(Users); // export default method(mapStateToProps)/connect(mapStateToProps)(class name)","map":{"version":3,"sources":["C:/Users/dumbways/Documents/reacJS/redux-house-bar2/src/users.js"],"names":["React","Component","axios","getUsers","getUsersPending","connect","Users","componentDidMount","props","dispatch","get","then","res","users","data","render","isLoading","map","user","index","name","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,eAAnB,QAA0C,uBAA1C;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAGC,MAAMC,KAAN,SAAoBL,SAApB,CAA8B;AAE3BM,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWC,QAAX,CAAoBL,eAAe,EAAnC;AACAF,IAAAA,KAAK,CAACQ,GAAN,CAAU,4CAAV,EAAwDC,IAAxD,CAA6DC,GAAG,IAAI;AAChE,YAAMC,KAAK,GAAGD,GAAG,CAACE,IAAlB;AACA,WAAKN,KAAL,CAAWC,QAAX,CAAoBN,QAAQ,CAACU,KAAD,CAA5B;AACH,KAHD;AAIH;;AAEHE,EAAAA,MAAM,GAAG;AACT,WAEE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEO,KAAKP,KAAL,CAAWK,KAAX,CAAiBG,SAAjB,KAA+B,KAA/B,GAAuC,IAAvC,GAA8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFrD,EAGO,KAAKR,KAAL,CAAWK,KAAX,CAAiBC,IAAjB,CAAsBG,GAAtB,CAA0B,CAACC,IAAD,EAAOC,KAAP,KACvB;AAAG,MAAA,GAAG,EAAEA,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgBD,IAAI,CAACE,IAArB,CADH,CAHP,CADF,CAFF;AAYA;;AAvB6B;;AA0B/B,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAQ;AACJT,IAAAA,KAAK,EAAES,KAAK,CAACT;AADT,GAAR;AAGH,CAJD;;AAMA,eAAeR,OAAO,CAACgB,eAAD,CAAP,CAAyBf,KAAzB,CAAf,C,CAGA","sourcesContent":["import React, {Component} from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport axios from 'axios';\r\nimport { getUsers, getUsersPending } from '../src/_actions/users';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n class Users extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.dispatch(getUsersPending());\r\n        axios.get('https://jsonplaceholder.typicode.com/users').then(res => {\r\n            const users = res.data;\r\n            this.props.dispatch(getUsers(users))\r\n        })\r\n    }\r\n\r\n  render() {   \r\n  return (\r\n\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>Data Users</h1>\r\n            {this.props.users.isLoading === false ? null : <p>Loading</p>}\r\n            {this.props.users.data.map((user, index) => (\r\n                <p key={index}>{user.name}</p>   \r\n            ))}\r\n      </header>\r\n    </div>\r\n  );\r\n }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return  {\r\n        users: state.users\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Users)\r\n;\r\n\r\n// export default method(mapStateToProps)/connect(mapStateToProps)(class name)\r\n"]},"metadata":{},"sourceType":"module"}